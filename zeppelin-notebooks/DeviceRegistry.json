{"paragraphs":[{"title":"HTML/Javascript setup","text":"%angular\n<!-- External libraries -->\n<script type=\"text/javascript\" src=\"http://dygraphs.com/dygraph-combined.js\"></script>\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>\n\n<div id=\"dummy\" vars=\"data1,data1Schema,data2,data2Schema\"></div>\n<script type=\"text/javascript\">\n  var div = $('#dummy');\n  //Given an element in the note & list of values to fetch from Spark\n  //window.angularVars.myVal will be current value of backend Spark val of same name\n  function hoist(element, varNames){\n    window.angularVars = {};\n    var scope = angular.element(element.parent('.ng-scope')).scope().compiledScope;\n    $.each(varNames, function(i, v){\n      window[v+'-watcher'] = scope.$watch(v, function(newVal, oldVal){\n        console.log('Setting ' + v + ' to:\\n');\n        console.log(newVal);\n        window.angularVars[v] = newVal;\n      });\n    });\n  }\n  hoist(div, div.attr('vars').split(','));\n</script>","dateUpdated":"2016-08-17T20:49:58-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","title":true,"editorHide":true,"tableHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1467668703986_-1274095240","id":"20160704-174503_870280567","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<!-- External libraries -->\n<script type=\"text/javascript\" src=\"http://dygraphs.com/dygraph-combined.js\"></script>\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>\n\n<div id=\"dummy\" vars=\"data1,data1Schema,data2,data2Schema\"></div>\n<script type=\"text/javascript\">\n  var div = $('#dummy');\n  //Given an element in the note & list of values to fetch from Spark\n  //window.angularVars.myVal will be current value of backend Spark val of same name\n  function hoist(element, varNames){\n    window.angularVars = {};\n    var scope = angular.element(element.parent('.ng-scope')).scope().compiledScope;\n    $.each(varNames, function(i, v){\n      window[v+'-watcher'] = scope.$watch(v, function(newVal, oldVal){\n        console.log('Setting ' + v + ' to:\\n');\n        console.log(newVal);\n        window.angularVars[v] = newVal;\n      });\n    });\n  }\n  hoist(div, div.attr('vars').split(','));\n</script>"},"dateCreated":"2016-07-04T05:45:03-0400","dateStarted":"2016-08-17T20:49:58-0400","dateFinished":"2016-08-17T20:49:58-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5838"},{"title":"Load Metrics","text":"val data1 = sqlContext.sql(\"select * from metrics\")\nz.angularBind(\"data1\", data1.collect())\nz.angularBind(\"data1Schema\", data1.schema)","dateUpdated":"2016-08-17T20:52:08-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":true,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1467600583465_-350539639","id":"20160703-224943_2118529814","result":{"code":"SUCCESS","type":"TEXT","msg":"\ndata1: org.apache.spark.sql.DataFrame = [time: string, cpuused: double ... 6 more fields]\n"},"dateCreated":"2016-07-03T10:49:43-0400","dateStarted":"2016-08-17T20:49:58-0400","dateFinished":"2016-08-17T20:49:59-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5839"},{"title":"Device Registry Meta","text":"%sql\nselect Datetime, Address as IP, Node, TaggedAddresses\nfrom nodes\nlimit 7","dateUpdated":"2016-08-17T20:49:58-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"Datetime","index":0,"aggr":"sum"}],"values":[{"name":"IP","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"Datetime","index":0,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql","editorHide":true,"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1470681801869_-1693912757","id":"20160808-144321_1602171126","result":{"code":"SUCCESS","type":"TABLE","msg":"Datetime\tIP\tNode\tTaggedAddresses\n2016-08-17 20:24:38\t172.18.0.3\tf8f370b41976\t[172.18.0.3]\n2016-08-17 20:24:38\t172.18.0.2\tmonitor.dev\t[172.18.0.2]\n2016-08-17 20:24:48\t172.18.0.3\tf8f370b41976\t[172.18.0.3]\n2016-08-17 20:24:48\t172.18.0.2\tmonitor.dev\t[172.18.0.2]\n2016-08-17 20:24:58\t172.18.0.3\tf8f370b41976\t[172.18.0.3]\n2016-08-17 20:24:58\t172.18.0.2\tmonitor.dev\t[172.18.0.2]\n2016-08-17 20:25:08\t172.18.0.3\tf8f370b41976\t[172.18.0.3]\n","comment":"","msgTable":[[{"key":"IP","value":"2016-08-17 20:24:38"},{"key":"IP","value":"172.18.0.3"},{"key":"IP","value":"f8f370b41976"},{"key":"IP","value":"[172.18.0.3]"}],[{"key":"Node","value":"2016-08-17 20:24:38"},{"key":"Node","value":"172.18.0.2"},{"key":"Node","value":"monitor.dev"},{"key":"Node","value":"[172.18.0.2]"}],[{"key":"TaggedAddresses","value":"2016-08-17 20:24:48"},{"key":"TaggedAddresses","value":"172.18.0.3"},{"key":"TaggedAddresses","value":"f8f370b41976"},{"key":"TaggedAddresses","value":"[172.18.0.3]"}],[{"value":"2016-08-17 20:24:48"},{"value":"172.18.0.2"},{"value":"monitor.dev"},{"value":"[172.18.0.2]"}],[{"value":"2016-08-17 20:24:58"},{"value":"172.18.0.3"},{"value":"f8f370b41976"},{"value":"[172.18.0.3]"}],[{"value":"2016-08-17 20:24:58"},{"value":"172.18.0.2"},{"value":"monitor.dev"},{"value":"[172.18.0.2]"}],[{"value":"2016-08-17 20:25:08"},{"value":"172.18.0.3"},{"value":"f8f370b41976"},{"value":"[172.18.0.3]"}]],"columnNames":[{"name":"Datetime","index":0,"aggr":"sum"},{"name":"IP","index":1,"aggr":"sum"},{"name":"Node","index":2,"aggr":"sum"},{"name":"TaggedAddresses","index":3,"aggr":"sum"}],"rows":[["2016-08-17 20:24:38","172.18.0.3","f8f370b41976","[172.18.0.3]"],["2016-08-17 20:24:38","172.18.0.2","monitor.dev","[172.18.0.2]"],["2016-08-17 20:24:48","172.18.0.3","f8f370b41976","[172.18.0.3]"],["2016-08-17 20:24:48","172.18.0.2","monitor.dev","[172.18.0.2]"],["2016-08-17 20:24:58","172.18.0.3","f8f370b41976","[172.18.0.3]"],["2016-08-17 20:24:58","172.18.0.2","monitor.dev","[172.18.0.2]"],["2016-08-17 20:25:08","172.18.0.3","f8f370b41976","[172.18.0.3]"]]},"dateCreated":"2016-08-08T02:43:21-0400","dateStarted":"2016-08-17T20:49:58-0400","dateFinished":"2016-08-17T20:49:59-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5840"},{"title":"Select Host","text":"val nodes = sqlContext.sql(\"select distinct node from nodes where node != 'monitor.dev'\").collect().map(x => (x(0).asInstanceOf[String], x(0).asInstanceOf[String]))\n\nval query = \"\"\"\nselect\n concat_ws(',', collect_list(date_format(datetime, 'HH:mm'))) as time,\n concat_ws(',', collect_list(cast(diskbusy as string))) as Disk,\n concat_ws(',', collect_list(cast(cpuuser as string))) as CPUUser,\n concat_ws(',', collect_list(cast(cpusys as string))) as CPUSys,\n concat_ws(',', collect_list(cast(round(cpusys+cpuuser, 2) as string))) as CPU,\n concat_ws(',', collect_list(cast(round(100*memavailable/memtotal, 2) as string))) as Mem,\n concat_ws(',', collect_list(cast(greatest(unknown.requests, 0) as string))) as ExternalRequests,\n concat_ws(',', collect_list(cast(greatest(known.requests, 0) as string))) as InternalRequests,\n concat_ws(',', collect_list(cast(greatest(known.requests, 0) + greatest(unknown.requests, 0) as string))) as TotalRequests,\n concat_ws(',', collect_list(cast(round(memavailable/1000, 0) as string))) as MemAvail\nfrom node_monitoring\nleft outer join (\n  select date_format(datetime, 'HH:mm') as time, app_host, count(*) as requests\n  from web_logs_enriched\n  where source_host is not null or source_ip = '127.0.0.1'\n  group by date_format(datetime, 'HH:mm'), app_host\n) known\non node_monitoring.node = known.app_host and date_format(node_monitoring.datetime, 'HH:mm') = known.time\nleft outer join (\n  select date_format(datetime, 'HH:mm') as time, app_host, count(*) as requests\n  from web_logs_enriched\n  where source_host is null\n  group by date_format(datetime, 'HH:mm'), app_host\n) unknown\non node_monitoring.node = unknown.app_host and date_format(node_monitoring.datetime, 'HH:mm') = unknown.time\nwhere node = '\"\"\" + z.select(\"node\", nodes) + \"\"\"'\ngroup by node\n\"\"\"\nval data2 = sqlContext.sql(query)\nz.angularBind(\"data2\", data2.collect())\nz.angularBind(\"data2Schema\", data2.schema)\nz.run(\"20160706-130128_836809999\")","dateUpdated":"2016-08-17T20:51:46-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","title":true,"editorHide":true,"tableHide":false},"settings":{"params":{"node":"f8f370b41976"},"forms":{"node":{"name":"node","displayName":"node","type":"select","defaultValue":"","options":[{"value":"f8f370b41976","displayName":"f8f370b41976","$$hashKey":"object:7188"}],"hidden":false}}},"apps":[],"jobName":"paragraph_1467824395155_1121927107","id":"20160706-125955_1152872728","result":{"code":"SUCCESS","type":"TEXT","msg":"\nnodes: Array[(String, String)] = Array((f8f370b41976,f8f370b41976))\n\n\n\n\n\n\n\n\n\n\n\n\nquery: String =\n\"\nselect\n concat_ws(',', collect_list(date_format(datetime, 'HH:mm'))) as time,\n concat_ws(',', collect_list(cast(diskbusy as string))) as Disk,\n concat_ws(',', collect_list(cast(cpuuser as string))) as CPUUser,\n concat_ws(',', collect_list(cast(cpusys as string))) as CPUSys,\n concat_ws(',', collect_list(cast(round(cpusys+cpuuser, 2) as string))) as CPU,\n concat_ws(',', collect_list(cast(round(100*memavailable/memtotal, 2) as string))) as Mem,\n concat_ws(',', collect_list(cast(greatest(unknown.requests, 0) as string))) as ExternalRequests,\n concat_ws(',', collect_list(cast(greatest(known.requests, 0) as string))) as InternalRequests,\n concat_ws(',', collect_list(cast(greatest(known.requests, 0) + greatest(unknown.requests, 0) as string))) as TotalRequests,\n concat_ws(','...\ndata2: org.apache.spark.sql.DataFrame = [time: string, Disk: string ... 8 more fields]\n"},"dateCreated":"2016-07-06T12:59:55-0400","dateStarted":"2016-08-17T20:51:43-0400","dateFinished":"2016-08-17T20:51:45-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5841","focus":true},{"title":"Host/Device View","text":"%angular\n<div id=\"chart2\" style=\"min-width: 100%; height: 500px; margin: 0 auto\" data=\"data2\"></div>\n<script type=\"text/javascript\">\nvar div = $('#chart2');\nvar data = window.angularVars[div.attr('data')][0].values;\nvar schema = window.angularVars[div.attr('data')+'Schema'];\n\nvar series = [];\n$.each(schema.fields, function(i, v){\n  if (i > 0){\n    series.push({\n      name: v.name, type: 'spline', yAxis: 0,\n      tooltip: { valueSuffix: ' %' },\n      data: JSON.parse('['+data[i].split(',')+']')\n    });\n  }\n});\n\nseries[series.length-1].dashStyle = 'dot';\nseries[series.length-1].yAxis = 1;\nseries[series.length-1].tooltip.valueSuffix = ' MB';\n\nfunction adjustSeries(index, dot){\n  series[index].dashStyle = dot;\n  series[index].yAxis = 2;\n  series[index].tooltip.valueSuffix = ' Hits';\n}\n\nadjustSeries(series.length - 2, 'longDash');\nadjustSeries(series.length - 3, 'shortDash');\nadjustSeries(series.length - 4, 'shortDash');\n\nvar xAxis = {categories: data[0].split(','), crosshair: true};\n\nvar yAxis1 = {\n  labels: { format: '{value} %', style: { color: Highcharts.getOptions().colors[2] } },\n  title: { text: 'Percentage Consumed', style: { color: Highcharts.getOptions().colors[2] } },\n  opposite: true\n};\n\nvar yAxis2 = {\n  labels: { format: '{value} MB', style: { color: Highcharts.getOptions().colors[0] } },\n  title: { text: 'Memory Available', style: { color: Highcharts.getOptions().colors[0] } },\n  gridLineWidth: 0\n};\n\nvar yAxis3 = {\n  labels: { format: '{value}', style: { color: Highcharts.getOptions().colors[0] } },\n  title: { text: 'HTTP Requests', style: { color: Highcharts.getOptions().colors[0] } },\n  gridLineWidth: 0,\n  opposite: true\n};\n\nvar legend = {\n  layout: 'vertical', align: 'left', verticalAlign: 'top', floating: true,\n  backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF',\n  x: 80, y: 55\n};\n\n$('#chart2').highcharts({\n  chart: { zoomType: 'xy' },\n  title: { text: 'Node Metrics:'},\n  xAxis: [xAxis],\n  yAxis: [yAxis1, yAxis2, yAxis3],\n  series: series,\n  legend: legend,\n  tooltip: { shared: true }\n});\n</script>","dateUpdated":"2016-08-17T20:51:02-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":true,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1467824488370_-882139613","id":"20160706-130128_836809999","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<div id=\"chart2\" style=\"min-width: 100%; height: 500px; margin: 0 auto\" data=\"data2\"></div>\n<script type=\"text/javascript\">\nvar div = $('#chart2');\nvar data = window.angularVars[div.attr('data')][0].values;\nvar schema = window.angularVars[div.attr('data')+'Schema'];\n\nvar series = [];\n$.each(schema.fields, function(i, v){\n  if (i > 0){\n    series.push({\n      name: v.name, type: 'spline', yAxis: 0,\n      tooltip: { valueSuffix: ' %' },\n      data: JSON.parse('['+data[i].split(',')+']')\n    });\n  }\n});\n\nseries[series.length-1].dashStyle = 'dot';\nseries[series.length-1].yAxis = 1;\nseries[series.length-1].tooltip.valueSuffix = ' MB';\n\nfunction adjustSeries(index, dot){\n  series[index].dashStyle = dot;\n  series[index].yAxis = 2;\n  series[index].tooltip.valueSuffix = ' Hits';\n}\n\nadjustSeries(series.length - 2, 'longDash');\nadjustSeries(series.length - 3, 'shortDash');\nadjustSeries(series.length - 4, 'shortDash');\n\nvar xAxis = {categories: data[0].split(','), crosshair: true};\n\nvar yAxis1 = {\n  labels: { format: '{value} %', style: { color: Highcharts.getOptions().colors[2] } },\n  title: { text: 'Percentage Consumed', style: { color: Highcharts.getOptions().colors[2] } },\n  opposite: true\n};\n\nvar yAxis2 = {\n  labels: { format: '{value} MB', style: { color: Highcharts.getOptions().colors[0] } },\n  title: { text: 'Memory Available', style: { color: Highcharts.getOptions().colors[0] } },\n  gridLineWidth: 0\n};\n\nvar yAxis3 = {\n  labels: { format: '{value}', style: { color: Highcharts.getOptions().colors[0] } },\n  title: { text: 'HTTP Requests', style: { color: Highcharts.getOptions().colors[0] } },\n  gridLineWidth: 0,\n  opposite: true\n};\n\nvar legend = {\n  layout: 'vertical', align: 'left', verticalAlign: 'top', floating: true,\n  backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF',\n  x: 80, y: 55\n};\n\n$('#chart2').highcharts({\n  chart: { zoomType: 'xy' },\n  title: { text: 'Node Metrics:'},\n  xAxis: [xAxis],\n  yAxis: [yAxis1, yAxis2, yAxis3],\n  series: series,\n  legend: legend,\n  tooltip: { shared: true }\n});\n</script>"},"dateCreated":"2016-07-06T01:01:28-0400","dateStarted":"2016-08-17T20:51:45-0400","dateFinished":"2016-08-17T20:51:45-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5842"},{"title":"App-Wide Metrics","text":"%angular\n<div id=\"chart1\" title=\"Node Metrics\" data=\"data1\" yAxes=\"MemAvail,Percentage Consumed,HTTP Requests\" height=\"400px\" width=\"2000\"></div>\n<input id=\"x0\" type=\"text\" ng-model=\"x0\" class=\"hide\"></input>\n<input id=\"x1\" type=\"text\" ng-model=\"x1\" class=\"hide\"></input>\n<script type=\"text/javascript\">\nvar div = $('#chart1');\nvar data = window.angularVars[div.attr('data')];\nvar schema = window.angularVars[div.attr('data')+'Schema'];\n\n//Convert query results into Plotly traces: https://plot.ly/javascript/multiple-axes/#multiple-yaxes\nvar traces = [];\n$.each(schema.fields.slice(1), function(i, field){ //Setup trace metadata\n  var trace = {x: [], y: [], name: field.name, type: 'scatter', yaxis: 'y'};\n  if (field.name.toLowerCase().indexOf('used') > 0) trace.yaxis = 'y2';\n  else if (field.name.toLowerCase().indexOf('requests') > 0) trace.yaxis = 'y3';\n  traces.push(trace);\n});\n//Load query results into trace arrays\n$.each(data, function(i,row){\n  //First value is a date\n  var date = new Date(row.values[0]);\n  $.each(row.values.slice(1), function(v, cell){\n    traces[v].x.push(date);\n    traces[v].y.push(cell);\n  });\n});\n\nvar layout = { title: 'MultiHost App View', legend: {orientation: 'h'}};\n$.each(div.attr('yAxes').split(','), function(i, v){\n  var axis = {title: v};\n  var key = 'yaxis';\n  if (i > 0){\n    key += i+1;\n    axis.side = 'right';\n    axis.overlaying = 'y';\n    axis.position = 1-.04*(i-1);\n  }\n  layout[key] = axis;\n});\n\nvar config = {displaylogo: div.attr('showLinks'), showLinks: div.attr('showLinks'), modeBarButtonsToRemove: ['sendDataToCloud']};\nPlotly.newPlot('chart1', traces, layout, config);\n\ndiv.bind('plotly_relayout', function(event,eventdata){\n  alert(new Date(eventdata['xaxis.range[0]']) + '\\n' + new Date(eventdata['xaxis.range[1]']));\n  /*\n  $('#x0').val(new Date(eventdata['xaxis.range[0]']));\n  $('#x1').val(new Date(eventdata['xaxis.range[1]']));\n  $('#x0').trigger('input');\n  $('#x1').trigger('input');\n  */\n});\n</script>","dateUpdated":"2016-08-17T20:52:34-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":true,"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1470550500073_-300729757","id":"20160807-021500_806175985","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<div id=\"chart1\" title=\"Node Metrics\" data=\"data1\" yAxes=\"MemAvail,Percentage Consumed,HTTP Requests\" height=\"400px\" width=\"2000\"></div>\n<input id=\"x0\" type=\"text\" ng-model=\"x0\" class=\"hide\"></input>\n<input id=\"x1\" type=\"text\" ng-model=\"x1\" class=\"hide\"></input>\n<script type=\"text/javascript\">\nvar div = $('#chart1');\nvar data = window.angularVars[div.attr('data')];\nvar schema = window.angularVars[div.attr('data')+'Schema'];\n\n//Convert query results into Plotly traces: https://plot.ly/javascript/multiple-axes/#multiple-yaxes\nvar traces = [];\n$.each(schema.fields.slice(1), function(i, field){ //Setup trace metadata\n  var trace = {x: [], y: [], name: field.name, type: 'scatter', yaxis: 'y'};\n  if (field.name.toLowerCase().indexOf('used') > 0) trace.yaxis = 'y2';\n  else if (field.name.toLowerCase().indexOf('requests') > 0) trace.yaxis = 'y3';\n  traces.push(trace);\n});\n//Load query results into trace arrays\n$.each(data, function(i,row){\n  //First value is a date\n  var date = new Date(row.values[0]);\n  $.each(row.values.slice(1), function(v, cell){\n    traces[v].x.push(date);\n    traces[v].y.push(cell);\n  });\n});\n\nvar layout = { title: 'MultiHost App View', legend: {orientation: 'h'}};\n$.each(div.attr('yAxes').split(','), function(i, v){\n  var axis = {title: v};\n  var key = 'yaxis';\n  if (i > 0){\n    key += i+1;\n    axis.side = 'right';\n    axis.overlaying = 'y';\n    axis.position = 1-.04*(i-1);\n  }\n  layout[key] = axis;\n});\n\nvar config = {displaylogo: div.attr('showLinks'), showLinks: div.attr('showLinks'), modeBarButtonsToRemove: ['sendDataToCloud']};\nPlotly.newPlot('chart1', traces, layout, config);\n\ndiv.bind('plotly_relayout', function(event,eventdata){\n  alert(new Date(eventdata['xaxis.range[0]']) + '\\n' + new Date(eventdata['xaxis.range[1]']));\n  /*\n  $('#x0').val(new Date(eventdata['xaxis.range[0]']));\n  $('#x1').val(new Date(eventdata['xaxis.range[1]']));\n  $('#x0').trigger('input');\n  $('#x1').trigger('input');\n  */\n});\n</script>"},"dateCreated":"2016-08-07T02:15:00-0400","dateStarted":"2016-08-17T20:52:34-0400","dateFinished":"2016-08-17T20:52:34-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5844","focus":true},{"title":"Timestamped Host Process Metadata","text":"%sql select * from ps_raw limit 5","dateUpdated":"2016-08-17T20:49:58-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"node","index":0,"aggr":"sum"}],"values":[{"name":"ts","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"node","index":0,"aggr":"sum"},"yAxis":{"name":"ts","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql","editorHide":true,"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1470818994961_-138995992","id":"20160810-044954_1805943913","result":{"code":"SUCCESS","type":"TABLE","msg":"node\tts\tuser\tpid\tCPU\tMem\tVSZ\tRSS\tTTY\tSTAT\tStart\tTime\tCommand\nf8f370b41976\t1471479\troot\t1\t0.0\t0.0\t11648\t2660\t?\tSs\t00:23\t0:00\tsh /scripts/start.sh\nf8f370b41976\t1471479\troot\t20\t0.0\t0.0\t18660\t4572\t?\tD\t00:23\t0:00\tpython /server.py 8000\nf8f370b41976\t1471479\troot\t23\t0.0\t0.0\t183036\t5760\t?\tSl\t00:23\t0:00\t\nf8f370b41976\t1471479\troot\t24\t0.0\t0.0\t11644\t2628\t?\tS\t00:23\t0:00\tsh /scripts/ps.sh\nf8f370b41976\t1471479\troot\t25\t0.0\t0.0\t11644\t2632\t?\tS\t00:23\t0:00\tsh /scripts/netstat.sh\n","comment":"","msgTable":[[{"key":"ts","value":"f8f370b41976"},{"key":"ts","value":"1471479"},{"key":"ts","value":"root"},{"key":"ts","value":"1"},{"key":"ts","value":"0.0"},{"key":"ts","value":"0.0"},{"key":"ts","value":"11648"},{"key":"ts","value":"2660"},{"key":"ts","value":"?"},{"key":"ts","value":"Ss"},{"key":"ts","value":"00:23"},{"key":"ts","value":"0:00"},{"key":"ts","value":"sh /scripts/start.sh"}],[{"key":"user","value":"f8f370b41976"},{"key":"user","value":"1471479"},{"key":"user","value":"root"},{"key":"user","value":"20"},{"key":"user","value":"0.0"},{"key":"user","value":"0.0"},{"key":"user","value":"18660"},{"key":"user","value":"4572"},{"key":"user","value":"?"},{"key":"user","value":"D"},{"key":"user","value":"00:23"},{"key":"user","value":"0:00"},{"key":"user","value":"python /server.py 8000"}],[{"key":"pid","value":"f8f370b41976"},{"key":"pid","value":"1471479"},{"key":"pid","value":"root"},{"key":"pid","value":"23"},{"key":"pid","value":"0.0"},{"key":"pid","value":"0.0"},{"key":"pid","value":"183036"},{"key":"pid","value":"5760"},{"key":"pid","value":"?"},{"key":"pid","value":"Sl"},{"key":"pid","value":"00:23"},{"key":"pid","value":"0:00"},{"key":"pid","value":""}],[{"key":"CPU","value":"f8f370b41976"},{"key":"CPU","value":"1471479"},{"key":"CPU","value":"root"},{"key":"CPU","value":"24"},{"key":"CPU","value":"0.0"},{"key":"CPU","value":"0.0"},{"key":"CPU","value":"11644"},{"key":"CPU","value":"2628"},{"key":"CPU","value":"?"},{"key":"CPU","value":"S"},{"key":"CPU","value":"00:23"},{"key":"CPU","value":"0:00"},{"key":"CPU","value":"sh /scripts/ps.sh"}],[{"key":"Mem","value":"f8f370b41976"},{"key":"Mem","value":"1471479"},{"key":"Mem","value":"root"},{"key":"Mem","value":"25"},{"key":"Mem","value":"0.0"},{"key":"Mem","value":"0.0"},{"key":"Mem","value":"11644"},{"key":"Mem","value":"2632"},{"key":"Mem","value":"?"},{"key":"Mem","value":"S"},{"key":"Mem","value":"00:23"},{"key":"Mem","value":"0:00"},{"key":"Mem","value":"sh /scripts/netstat.sh"}]],"columnNames":[{"name":"node","index":0,"aggr":"sum"},{"name":"ts","index":1,"aggr":"sum"},{"name":"user","index":2,"aggr":"sum"},{"name":"pid","index":3,"aggr":"sum"},{"name":"CPU","index":4,"aggr":"sum"},{"name":"Mem","index":5,"aggr":"sum"},{"name":"VSZ","index":6,"aggr":"sum"},{"name":"RSS","index":7,"aggr":"sum"},{"name":"TTY","index":8,"aggr":"sum"},{"name":"STAT","index":9,"aggr":"sum"},{"name":"Start","index":10,"aggr":"sum"},{"name":"Time","index":11,"aggr":"sum"},{"name":"Command","index":12,"aggr":"sum"}],"rows":[["f8f370b41976","1471479","root","1","0.0","0.0","11648","2660","?","Ss","00:23","0:00","sh /scripts/start.sh"],["f8f370b41976","1471479","root","20","0.0","0.0","18660","4572","?","D","00:23","0:00","python /server.py 8000"],["f8f370b41976","1471479","root","23","0.0","0.0","183036","5760","?","Sl","00:23","0:00",""],["f8f370b41976","1471479","root","24","0.0","0.0","11644","2628","?","S","00:23","0:00","sh /scripts/ps.sh"],["f8f370b41976","1471479","root","25","0.0","0.0","11644","2632","?","S","00:23","0:00","sh /scripts/netstat.sh"]]},"dateCreated":"2016-08-10T04:49:54-0400","dateStarted":"2016-08-17T20:50:00-0400","dateFinished":"2016-08-17T20:50:01-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5845"},{"title":"Heaviest Processes by CPU","text":"%sql\nselect * from (\nselect node, split(command, ' ')[0], avg(cpu) as avg\nfrom ps_raw\ngroup by node, split(command, ' ')[0]\norder by avg desc\n) a\nwhere avg > 0","dateUpdated":"2016-08-17T20:49:58-0400","config":{"colWidth":12,"graph":{"mode":"pieChart","height":300,"optionOpen":false,"keys":[{"name":"split(command,  )[0]","index":1,"aggr":"sum"}],"values":[{"name":"avg","index":2,"aggr":"sum"}],"groups":[{"name":"node","index":0,"aggr":"sum"}],"scatter":{"xAxis":{"name":"node","index":0,"aggr":"sum"},"yAxis":{"name":"split(command,  )[0]","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql","helium":{},"title":true,"editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1470848083709_-992448136","id":"20160810-125443_900198444","result":{"code":"SUCCESS","type":"TABLE","msg":"node\tsplit(command,  )[0]\tavg\nmonitor.dev\t/usr/lib/jvm/java-1.8.0-openjdk/bin/java\t14.193571428571472\nmonitor.dev\tconsul\t1.6124999999999918\nf8f370b41976\t\t1.1136690647481984\nf8f370b41976\tconsul\t0.9974358974358974\nmonitor.dev\t\t0.8328571428571439\nmonitor.dev\tnetstat\t0.04\nf8f370b41976\tpython\t0.011552346570397116\nmonitor.dev\tsh\t0.0013286093888396813\nf8f370b41976\tsh\t7.200720072007201E-4\n","comment":"","msgTable":[[{"key":"split(command,  )[0]","value":"monitor.dev"},{"key":"split(command,  )[0]","value":"/usr/lib/jvm/java-1.8.0-openjdk/bin/java"},{"key":"split(command,  )[0]","value":"14.193571428571472"}],[{"key":"avg","value":"monitor.dev"},{"key":"avg","value":"consul"},{"key":"avg","value":"1.6124999999999918"}],[{"value":"f8f370b41976"},{"value":""},{"value":"1.1136690647481984"}],[{"value":"f8f370b41976"},{"value":"consul"},{"value":"0.9974358974358974"}],[{"value":"monitor.dev"},{"value":""},{"value":"0.8328571428571439"}],[{"value":"monitor.dev"},{"value":"netstat"},{"value":"0.04"}],[{"value":"f8f370b41976"},{"value":"python"},{"value":"0.011552346570397116"}],[{"value":"monitor.dev"},{"value":"sh"},{"value":"0.0013286093888396813"}],[{"value":"f8f370b41976"},{"value":"sh"},{"value":"7.200720072007201E-4"}]],"columnNames":[{"name":"node","index":0,"aggr":"sum"},{"name":"split(command,  )[0]","index":1,"aggr":"sum"},{"name":"avg","index":2,"aggr":"sum"}],"rows":[["monitor.dev","/usr/lib/jvm/java-1.8.0-openjdk/bin/java","14.193571428571472"],["monitor.dev","consul","1.6124999999999918"],["f8f370b41976","","1.1136690647481984"],["f8f370b41976","consul","0.9974358974358974"],["monitor.dev","","0.8328571428571439"],["monitor.dev","netstat","0.04"],["f8f370b41976","python","0.011552346570397116"],["monitor.dev","sh","0.0013286093888396813"],["f8f370b41976","sh","7.200720072007201E-4"]]},"dateCreated":"2016-08-10T12:54:43-0400","dateStarted":"2016-08-17T20:50:01-0400","dateFinished":"2016-08-17T20:50:08-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5846"},{"title":"Timestamped Host Network Activity","text":"%sql select * from netstat_raw limit 5","dateUpdated":"2016-08-17T20:49:58-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"node","index":0,"aggr":"sum"}],"values":[{"name":"ts","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"node","index":0,"aggr":"sum"},"yAxis":{"name":"ts","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql","title":true,"editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1470821879974_-1153275647","id":"20160810-053759_255179982","result":{"code":"SUCCESS","type":"TABLE","msg":"node\tts\tProto\tRecvQ\tSendQ\tLocalAddress\tForeignAddress\tState\tUser\tInode\tpid\tProgramName\nf8f370b41976\t1471479\ttcp\t0\t0\t127.0.0.11:39110\t0.0.0.0:*\tLISTEN\troot\t20809\t\t\nf8f370b41976\t1471479\tudp\t0\t0\t127.0.0.11:46407\t0.0.0.0:*\troot\t20808\t-\t\t\nf8f370b41976\t1471479\ttcp\t0\t0\t0.0.0.0:irdmi\t0.0.0.0:*\tLISTEN\troot\t18955\t\t\nf8f370b41976\t1471479\ttcp\t0\t0\t127.0.0.11:39110\t0.0.0.0:*\tLISTEN\troot\t20809\t\t\nf8f370b41976\t1471479\tudp\t0\t0\t127.0.0.11:46407\t0.0.0.0:*\troot\t20808\t-\t\t\n","comment":"","msgTable":[[{"key":"ts","value":"f8f370b41976"},{"key":"ts","value":"1471479"},{"key":"ts","value":"tcp"},{"key":"ts","value":"0"},{"key":"ts","value":"0"},{"key":"ts","value":"127.0.0.11:39110"},{"key":"ts","value":"0.0.0.0:*"},{"key":"ts","value":"LISTEN"},{"key":"ts","value":"root"},{"key":"ts","value":"20809"},{"key":"ts","value":""},{"key":"ts","value":""}],[{"key":"Proto","value":"f8f370b41976"},{"key":"Proto","value":"1471479"},{"key":"Proto","value":"udp"},{"key":"Proto","value":"0"},{"key":"Proto","value":"0"},{"key":"Proto","value":"127.0.0.11:46407"},{"key":"Proto","value":"0.0.0.0:*"},{"key":"Proto","value":"root"},{"key":"Proto","value":"20808"},{"key":"Proto","value":"-"},{"key":"Proto","value":""},{"key":"Proto","value":""}],[{"key":"RecvQ","value":"f8f370b41976"},{"key":"RecvQ","value":"1471479"},{"key":"RecvQ","value":"tcp"},{"key":"RecvQ","value":"0"},{"key":"RecvQ","value":"0"},{"key":"RecvQ","value":"0.0.0.0:irdmi"},{"key":"RecvQ","value":"0.0.0.0:*"},{"key":"RecvQ","value":"LISTEN"},{"key":"RecvQ","value":"root"},{"key":"RecvQ","value":"18955"},{"key":"RecvQ","value":""},{"key":"RecvQ","value":""}],[{"key":"SendQ","value":"f8f370b41976"},{"key":"SendQ","value":"1471479"},{"key":"SendQ","value":"tcp"},{"key":"SendQ","value":"0"},{"key":"SendQ","value":"0"},{"key":"SendQ","value":"127.0.0.11:39110"},{"key":"SendQ","value":"0.0.0.0:*"},{"key":"SendQ","value":"LISTEN"},{"key":"SendQ","value":"root"},{"key":"SendQ","value":"20809"},{"key":"SendQ","value":""},{"key":"SendQ","value":""}],[{"key":"LocalAddress","value":"f8f370b41976"},{"key":"LocalAddress","value":"1471479"},{"key":"LocalAddress","value":"udp"},{"key":"LocalAddress","value":"0"},{"key":"LocalAddress","value":"0"},{"key":"LocalAddress","value":"127.0.0.11:46407"},{"key":"LocalAddress","value":"0.0.0.0:*"},{"key":"LocalAddress","value":"root"},{"key":"LocalAddress","value":"20808"},{"key":"LocalAddress","value":"-"},{"key":"LocalAddress","value":""},{"key":"LocalAddress","value":""}]],"columnNames":[{"name":"node","index":0,"aggr":"sum"},{"name":"ts","index":1,"aggr":"sum"},{"name":"Proto","index":2,"aggr":"sum"},{"name":"RecvQ","index":3,"aggr":"sum"},{"name":"SendQ","index":4,"aggr":"sum"},{"name":"LocalAddress","index":5,"aggr":"sum"},{"name":"ForeignAddress","index":6,"aggr":"sum"},{"name":"State","index":7,"aggr":"sum"},{"name":"User","index":8,"aggr":"sum"},{"name":"Inode","index":9,"aggr":"sum"},{"name":"pid","index":10,"aggr":"sum"},{"name":"ProgramName","index":11,"aggr":"sum"}],"rows":[["f8f370b41976","1471479","tcp","0","0","127.0.0.11:39110","0.0.0.0:*","LISTEN","root","20809","",""],["f8f370b41976","1471479","udp","0","0","127.0.0.11:46407","0.0.0.0:*","root","20808","-","",""],["f8f370b41976","1471479","tcp","0","0","0.0.0.0:irdmi","0.0.0.0:*","LISTEN","root","18955","",""],["f8f370b41976","1471479","tcp","0","0","127.0.0.11:39110","0.0.0.0:*","LISTEN","root","20809","",""],["f8f370b41976","1471479","udp","0","0","127.0.0.11:46407","0.0.0.0:*","root","20808","-","",""]]},"dateCreated":"2016-08-10T05:37:59-0400","dateStarted":"2016-08-17T20:50:01-0400","dateFinished":"2016-08-17T20:50:08-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5847"},{"title":"Most Frequent Net Activity by Host","text":"%sql\nselect node, foreignaddress, count(*) as count\nfrom netstat_raw group by node, foreignaddress\norder by count desc\nlimit 30","dateUpdated":"2016-08-17T20:49:58-0400","config":{"colWidth":12,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"foreignaddress","index":1,"aggr":"sum"}],"values":[{"name":"count","index":2,"aggr":"sum"}],"groups":[{"name":"node","index":0,"aggr":"sum"}],"scatter":{"xAxis":{"name":"node","index":0,"aggr":"sum"}}},"enabled":true,"editorHide":true,"title":true,"helium":{},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1470847781316_572493683","id":"20160810-124941_1867977815","result":{"code":"SUCCESS","type":"TABLE","msg":"node\tforeignaddress\tcount\nmonitor.dev\tmonitor.dev:cap\t28852\nf8f370b41976\ttechops_monitor.dev_1.techops_dev:cap\t24511\nmonitor.dev\t[::]:*\t2751\nf8f370b41976\t0.0.0.0:*\t1901\nmonitor.dev\tord30s25-in-f206.1e100.net:http\t1461\nmonitor.dev\t0.0.0.0:*\t1412\nmonitor.dev\tord30s25-in-f14.1e100.net:http\t1395\nf8f370b41976\t[::]:*\t1350\nmonitor.dev\ttechops_web.dev_1.techops_dev:tmi\t544\nmonitor.dev\tlocalhost:fmtp\t422\nmonitor.dev\tord36s01-in-f142.1e100.net:http\t368\nf8f370b41976\tlocalhost:irdmi\t328\nmonitor.dev\ttechops_web.dev_1.techops_dev:amberon\t285\nmonitor.dev\tlocalhost:45888\t272\nf8f370b41976\ttechops_monitor.dev_1.techops_dev:56812\t270\nf8f370b41976\ttechops_monitor.dev_1.techops_dev:56814\t269\nmonitor.dev\ttechops_web.dev_1.techops_dev:37552\t267\nf8f370b41976\ttechops_monitor.dev_1.techops_dev:tmi\t264\nf8f370b41976\ttechops_monitor.dev_1.techops_dev:amberon\t258\nmonitor.dev\tord36s01-in-f14.1e100.net:http\t256\nmonitor.dev\tmonitor.dev:34692\t244\nmonitor.dev\ttechops_web.dev_1.techops_dev:45691\t244\nmonitor.dev\ttechops_web.dev_1.techops_dev:irdmi\t148\nmonitor.dev\tlocalhost:45889\t138\nmonitor.dev\tgateway:46058\t79\nmonitor.dev\tgateway:47512\t70\nmonitor.dev\tgateway:46248\t57\nmonitor.dev\tgateway:47044\t56\nmonitor.dev\tgateway:46204\t53\nmonitor.dev\tgateway:47460\t52\n","comment":"","msgTable":[[{"key":"foreignaddress","value":"monitor.dev"},{"key":"foreignaddress","value":"monitor.dev:cap"},{"key":"foreignaddress","value":"28852"}],[{"key":"count","value":"f8f370b41976"},{"key":"count","value":"techops_monitor.dev_1.techops_dev:cap"},{"key":"count","value":"24511"}],[{"value":"monitor.dev"},{"value":"[::]:*"},{"value":"2751"}],[{"value":"f8f370b41976"},{"value":"0.0.0.0:*"},{"value":"1901"}],[{"value":"monitor.dev"},{"value":"ord30s25-in-f206.1e100.net:http"},{"value":"1461"}],[{"value":"monitor.dev"},{"value":"0.0.0.0:*"},{"value":"1412"}],[{"value":"monitor.dev"},{"value":"ord30s25-in-f14.1e100.net:http"},{"value":"1395"}],[{"value":"f8f370b41976"},{"value":"[::]:*"},{"value":"1350"}],[{"value":"monitor.dev"},{"value":"techops_web.dev_1.techops_dev:tmi"},{"value":"544"}],[{"value":"monitor.dev"},{"value":"localhost:fmtp"},{"value":"422"}],[{"value":"monitor.dev"},{"value":"ord36s01-in-f142.1e100.net:http"},{"value":"368"}],[{"value":"f8f370b41976"},{"value":"localhost:irdmi"},{"value":"328"}],[{"value":"monitor.dev"},{"value":"techops_web.dev_1.techops_dev:amberon"},{"value":"285"}],[{"value":"monitor.dev"},{"value":"localhost:45888"},{"value":"272"}],[{"value":"f8f370b41976"},{"value":"techops_monitor.dev_1.techops_dev:56812"},{"value":"270"}],[{"value":"f8f370b41976"},{"value":"techops_monitor.dev_1.techops_dev:56814"},{"value":"269"}],[{"value":"monitor.dev"},{"value":"techops_web.dev_1.techops_dev:37552"},{"value":"267"}],[{"value":"f8f370b41976"},{"value":"techops_monitor.dev_1.techops_dev:tmi"},{"value":"264"}],[{"value":"f8f370b41976"},{"value":"techops_monitor.dev_1.techops_dev:amberon"},{"value":"258"}],[{"value":"monitor.dev"},{"value":"ord36s01-in-f14.1e100.net:http"},{"value":"256"}],[{"value":"monitor.dev"},{"value":"monitor.dev:34692"},{"value":"244"}],[{"value":"monitor.dev"},{"value":"techops_web.dev_1.techops_dev:45691"},{"value":"244"}],[{"value":"monitor.dev"},{"value":"techops_web.dev_1.techops_dev:irdmi"},{"value":"148"}],[{"value":"monitor.dev"},{"value":"localhost:45889"},{"value":"138"}],[{"value":"monitor.dev"},{"value":"gateway:46058"},{"value":"79"}],[{"value":"monitor.dev"},{"value":"gateway:47512"},{"value":"70"}],[{"value":"monitor.dev"},{"value":"gateway:46248"},{"value":"57"}],[{"value":"monitor.dev"},{"value":"gateway:47044"},{"value":"56"}],[{"value":"monitor.dev"},{"value":"gateway:46204"},{"value":"53"}],[{"value":"monitor.dev"},{"value":"gateway:47460"},{"value":"52"}]],"columnNames":[{"name":"node","index":0,"aggr":"sum"},{"name":"foreignaddress","index":1,"aggr":"sum"},{"name":"count","index":2,"aggr":"sum"}],"rows":[["monitor.dev","monitor.dev:cap","28852"],["f8f370b41976","techops_monitor.dev_1.techops_dev:cap","24511"],["monitor.dev","[::]:*","2751"],["f8f370b41976","0.0.0.0:*","1901"],["monitor.dev","ord30s25-in-f206.1e100.net:http","1461"],["monitor.dev","0.0.0.0:*","1412"],["monitor.dev","ord30s25-in-f14.1e100.net:http","1395"],["f8f370b41976","[::]:*","1350"],["monitor.dev","techops_web.dev_1.techops_dev:tmi","544"],["monitor.dev","localhost:fmtp","422"],["monitor.dev","ord36s01-in-f142.1e100.net:http","368"],["f8f370b41976","localhost:irdmi","328"],["monitor.dev","techops_web.dev_1.techops_dev:amberon","285"],["monitor.dev","localhost:45888","272"],["f8f370b41976","techops_monitor.dev_1.techops_dev:56812","270"],["f8f370b41976","techops_monitor.dev_1.techops_dev:56814","269"],["monitor.dev","techops_web.dev_1.techops_dev:37552","267"],["f8f370b41976","techops_monitor.dev_1.techops_dev:tmi","264"],["f8f370b41976","techops_monitor.dev_1.techops_dev:amberon","258"],["monitor.dev","ord36s01-in-f14.1e100.net:http","256"],["monitor.dev","monitor.dev:34692","244"],["monitor.dev","techops_web.dev_1.techops_dev:45691","244"],["monitor.dev","techops_web.dev_1.techops_dev:irdmi","148"],["monitor.dev","localhost:45889","138"],["monitor.dev","gateway:46058","79"],["monitor.dev","gateway:47512","70"],["monitor.dev","gateway:46248","57"],["monitor.dev","gateway:47044","56"],["monitor.dev","gateway:46204","53"],["monitor.dev","gateway:47460","52"]]},"dateCreated":"2016-08-10T12:49:41-0400","dateStarted":"2016-08-17T20:50:08-0400","dateFinished":"2016-08-17T20:50:15-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5848"},{"text":"import org.apache.zeppelin.display.angular.notebookscope._\nimport AngularElem._","dateUpdated":"2016-08-17T20:49:58-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1470847904415_-838011109","id":"20160810-125144_1208192331","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.zeppelin.display.angular.notebookscope._\n\nimport AngularElem._\n"},"dateCreated":"2016-08-10T12:51:44-0400","dateStarted":"2016-08-17T20:50:08-0400","dateFinished":"2016-08-17T20:50:16-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5849"},{"text":"","dateUpdated":"2016-08-17T20:49:58-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1471279555545_-1577259220","id":"20160815-124555_255216493","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-08-15T12:45:55-0400","dateStarted":"2016-08-17T20:50:16-0400","dateFinished":"2016-08-17T20:50:16-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5850"}],"name":"DeviceRegistry","id":"2BQ9NB3EY","lastReplName":{"value":"sql"},"angularObjects":{"2BQ4DA89C:shared_process":[],"2BQ2F53M6:shared_process":[],"2BSY8XK83:shared_process":[],"2BQQW1DA2:shared_process":[],"2BTD7M9Z7:shared_process":[{"name":"data2Schema","object":{"fields":[{"name":"time","dataType":{"ordering":{}},"nullable":false,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"Disk","dataType":{"ordering":{}},"nullable":false,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"CPUUser","dataType":{"ordering":{}},"nullable":false,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"CPUSys","dataType":{"ordering":{}},"nullable":false,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"CPU","dataType":{"ordering":{}},"nullable":false,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"Mem","dataType":{"ordering":{}},"nullable":false,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"ExternalRequests","dataType":{"ordering":{}},"nullable":false,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"InternalRequests","dataType":{"ordering":{}},"nullable":false,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"TotalRequests","dataType":{"ordering":{}},"nullable":false,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"MemAvail","dataType":{"ordering":{}},"nullable":false,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":0,"bitmap$0":0},"noteId":"2BQ9NB3EY"},{"name":"data2","object":[],"noteId":"2BQ9NB3EY"}],"2BRQE418G:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}